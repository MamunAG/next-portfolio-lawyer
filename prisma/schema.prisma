// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  name       String?
  password   String?
  BlogMaster BlogMaster[]
}

model Tag {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  isActive Boolean    @default(true)
  BlogTags BlogTags[]
}

model BlogMaster {
  id           Int           @id @default(autoincrement())
  title        String        @unique
  composedById Int?
  composedBy   User?         @relation(fields: [composedById], references: [id])
  composedDate DateTime?
  isPublished  Boolean?      @default(false)
  BlogDetails  BlogDetails[]
  BlogTags     BlogTags[]
}

model BlogDetails {
  id           Int         @id @default(autoincrement())
  masterId     Int
  blogMst      BlogMaster? @relation(fields: [masterId], references: [id])
  sectionType  String
  imagePreview String?
  text         String?
  sortingNo    Int         @default(0)
}

model BlogTags {
  id      Int         @id @default(autoincrement())
  blogId  Int
  blogMst BlogMaster? @relation(fields: [blogId], references: [id])
  tagId   Int
  tag     Tag?        @relation(fields: [tagId], references: [id])
}

model HireMe {
  id          Int      @id @default(autoincrement())
  name        String
  email       String?
  contact     String
  address     String?
  createdDate DateTime
}

model ContactMessage {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  subject     String?
  message     String?
  createdDate DateTime
}
